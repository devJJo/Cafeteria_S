<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CafeteriaSqlMap">


	<insert id="insertUser" parameterType="com.devjjo.cafeteria.model.User">
		INSERT INTO PUBLIC.USER VALUES(#{user_Id}, #{user_Nm}, #{user_Img}, #{remark}, LOCALTIMESTAMP,LOCALTIMESTAMP);
	</insert>

	<select id="selectUserOne" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.User">
		SELECT * 
		FROM PUBLIC.USER
		WHERE USER_ID = #{P_USER_ID}
	</select>

	<delete id="deleteUser" parameterType="java.util.HashMap">
		DELETE 
		FROM PUBLIC.USER
		WHERE USER_ID = #{P_USER_ID}
	</delete>

	<select id="selectcafes"  parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Cafe">

		SELECT 
			END_PAGE,
			CAFE_ID,
			CAFE_NM,
			CAFE_IMG_NM,
			CAFE_IMG_DIR,
			PRICE,
			LUNCH_YN,
			DINNER_YN,
			OPER_TIME,
			BUILD_ADDR,
			BUILD_NM,
			BUILD_TEL,
			BUILD_HOME,
			BUILD_KEY,
			BUILD_X,
			BUILD_Y,
			BUILD_SCORE,
			DISTANCE,
			USE_YN
		FROM(
			SELECT 
				END_PAGE,
				CAFE_ID,
				CAFE_NM,
				CAFE_IMG_NM,
				CAFE_IMG_DIR,
				PRICE,
				LUNCH_YN,
				DINNER_YN,
				OPER_TIME,
				BUILD_ADDR,
				BUILD_NM,
				BUILD_TEL,
				BUILD_HOME,
				BUILD_KEY,
				BUILD_X,
				BUILD_Y,
				COALESCE(BUILD_SCORE,0) AS BUILD_SCORE,
				ROUND(CAST(DISTANCE AS NUMERIC),0) AS DISTANCE,
				USE_YN,
				INS_USER_DTM,
				UPD_USER_DTM
			FROM(															 
				SELECT 
					(CASE WHEN ${P_COUNT} * 20 <![CDATA[<]]> COUNT(*) OVER() THEN 'FALSE' 
						 WHEN ${P_COUNT} * 20 <![CDATA[>=]]> COUNT(*) OVER() THEN 'TRUE' END) AS END_PAGE,
					CAFE_ID,
					CAFE_NM,
					CAFE_IMG_NM,
					CAFE_IMG_DIR,
					PRICE,
					LUNCH_YN,
					DINNER_YN,
					OPER_TIME,
					BUILD_ADDR,
					BUILD_NM,
					BUILD_TEL,
					BUILD_HOME,
					BUILD_KEY,
					BUILD_X,
					BUILD_Y,
					(SELECT ROUND(AVG( COMMENT_SCORE),1) FROM PUBLIC.CAFE_COMMENT WHERE CAFE_ID=CAFE.CAFE_ID GROUP BY CAFE_ID) AS BUILD_SCORE,
					(select earth_distance(ll_to_earth(${P_LAT},${P_LON}), ll_to_earth(CAFE.BUILD_X,CAFE.BUILD_Y))) AS DISTANCE,
					USE_YN,
					INS_USER_DTM,
					UPD_USER_DTM
				FROM PUBLIC.CAFE AS CAFE
				<if test="P_SORT_TYPE != null">
					<if test='P_SORT_TYPE == "1"'>
					    ORDER BY DISTANCE ASC
					</if>
					<if test='P_SORT_TYPE == "2"'>
					    ORDER BY BUILD_SCORE DESC
					</if>
				</if>
		  	 	LIMIT 20 OFFSET (${P_COUNT} - 1) * 20
			) CAFE	
		) CAFE
		

  	 
	</select>
	
	<select id="selectmenus" resultType="com.devjjo.cafeteria.model.Menu">
		SELECT * 
		FROM PUBLIC.MENU
		WHERE MENU_DATE = #{P_TODAY}
	</select>

	<select id="select_date_menu" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Menu">
		SELECT * 
		FROM PUBLIC.MENU
		WHERE CAFE_ID = #{P_CAFE_ID} AND MENU_DATE BETWEEN #{P_ST_DATE} AND #{P_END_DATE}
		ORDER BY MENU_DATE ASC, MENU_DIV DESC
	</select>

	<insert id="insertComment" parameterType="com.devjjo.cafeteria.model.Cafe_Comment">
		INSERT INTO PUBLIC.CAFE_COMMENT(CAFE_ID, USER_ID, COMMENT, COMMENT_SCORE, INS_USER_DTM, UPD_USER_DTM) 
			VALUES(#{cafe_Id}, #{user_Id}, #{comment}, TO_NUMBER(#{comment_score}, '9.9'), LOCALTIMESTAMP, LOCALTIMESTAMP);
	</insert>

	<select id="selectComment" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Cafe_Comment">
		SELECT * 
		FROM PUBLIC.CAFE_COMMENT
		WHERE CAFE_ID = #{P_CAFE_ID}
		ORDER BY SEQ DESC
	</select>

	<update id="updateComment" parameterType="java.util.HashMap">
		UPDATE PUBLIC.CAFE_COMMENT
		SET COMMENT =#{P_COMMENT}, COMMENT_SCORE = TO_NUMBER(#{P_SCORE}, '9.9'), UPD_USER_DTM = LOCALTIMESTAMP
		WHERE CAFE_ID = #{P_CAFE_ID} AND USER_ID = #{P_USER_ID} AND SEQ = ${P_SEQ}

	</update>

	<delete id="deleteComment" parameterType="java.util.HashMap">
		DELETE 
		FROM PUBLIC.CAFE_COMMENT
		WHERE CAFE_ID = #{P_CAFE_ID} AND USER_ID = #{P_USER_ID} AND SEQ = ${P_SEQ}
	</delete>
	
	
	<select id="selectAllComment" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Cafe_Comment">
		SELECT * 
		FROM PUBLIC.CAFE_COMMENT
		WHERE USER_ID = #{P_USER_ID}
		ORDER BY SEQ DESC
	</select>

	<select id="selectAllFavorite" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Favorite">
		SELECT * 
		FROM PUBLIC.FAVORITE
		WHERE USER_ID = #{P_USER_ID}
		ORDER BY ADD_DATE DESC
	</select>
	
	<delete id="deleteFavorite" parameterType="java.util.HashMap">
		DELETE 
		FROM PUBLIC.FAVORITE
		WHERE USER_ID = #{P_USER_ID} AND CAFE_ID = #{P_CAFE_ID}
	</delete>
	
	<insert id="insertFavorite" parameterType="com.devjjo.cafeteria.model.Favorite">
		INSERT INTO PUBLIC.FAVORITE VALUES(#{user_Id}, #{cafe_Id}, #{add_Date});	
	</insert>
	
	<select id="selectAllNotice" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Notice">
		SELECT SEQ, NOTICE_TITLE, NOTICE_CONTENTS, TO_CHAR(INS_USER_DTM, 'YYYY-MM-DD') AS INS_USER_DTM
		FROM PUBLIC.NOTICE
		ORDER BY SEQ DESC
	</select>
	
	<select id="getCafeList" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Cafe">
		SELECT * 
		FROM PUBLIC.CAFE
		ORDER BY CAFE_ID ASC
	</select>	

	<select id="getMenu" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Menu">
		SELECT * 
		FROM PUBLIC.MENU
		WHERE MENU_DATE = #{P_MENU_DATE} AND CAFE_ID = #{P_CAFE_ID} AND MENU_DIV = #{P_MENU_DIV}
	</select>	

	<select id="getCafeInfo" parameterType="java.util.HashMap" resultType="com.devjjo.cafeteria.model.Cafe">
		SELECT * 
		FROM PUBLIC.CAFE
		WHERE CAFE_ID = #{P_CAFE_ID}
		ORDER BY CAFE_ID
	</select>

	<insert id="insertMenu" parameterType="com.devjjo.cafeteria.model.Menu">
				INSERT INTO PUBLIC.MENU(
						CAFE_ID
						, MENU_DATE
						, MENU_DIV
						, RICE
						, SOUP
						, SIDE_DISH1
						, SIDE_DISH2
						, SIDE_DISH3
						, SIDE_DISH4
						, SIDE_DISH5
						, SIDE_DISH6
						, SIDE_DISH7
						, SIDE_DISH8
						, DESSERT1
						, DESSERT2
						, INS_USER_DTM )
				VALUES (
						#{cafe_Id}
						, #{menu_Date}
						, #{menu_Div}
						, #{rice}
						, #{soup}
						, #{side_Dish1}
						, #{side_Dish2}
						, #{side_Dish3}
						, #{side_Dish4}
						, #{side_Dish5}
						, #{side_Dish6}
						, #{side_Dish7}
						, #{side_Dish8}
						, #{dessert1}
						, #{dessert2}
						, LOCALTIMESTAMP )

	</insert>

	<select id="getExist" parameterType="com.devjjo.cafeteria.model.Menu" resultType="java.lang.Integer">
		SELECT COUNT(CAFE_ID)
		FROM PUBLIC.MENU
		WHERE CAFE_ID = #{cafe_Id} AND MENU_DATE = #{menu_Date} AND MENU_DIV = #{menu_Div}
	</select>
	
	
	<update id="updateMenu" parameterType="com.devjjo.cafeteria.model.Menu">
		UPDATE PUBLIC.MENU SET
			RICE = #{rice}
			, SOUP = #{soup}
			, SIDE_DISH1 = #{side_Dish1}
			, SIDE_DISH2 = #{side_Dish2}
			, SIDE_DISH3 = #{side_Dish3}
			, SIDE_DISH4 = #{side_Dish4}	
			, SIDE_DISH5 = #{side_Dish5}
			, SIDE_DISH6 = #{side_Dish6}
			, SIDE_DISH7 = #{side_Dish7}
			, SIDE_DISH8 = #{side_Dish8}
			, DESSERT1 = #{dessert1}
			, DESSERT2 = #{dessert2}
			, UPD_USER_DTM = LOCALTIMESTAMP
		WHERE CAFE_ID = #{cafe_Id} AND MENU_DATE = #{menu_Date} AND MENU_DIV = #{menu_Div}
	</update>
	
	<delete id="deleteALLFavorite" parameterType="java.util.HashMap">
		DELETE 
		FROM PUBLIC.FAVORITE
		WHERE USER_ID = #{P_USER_ID}
	</delete>
	
	<delete id="deleteALLComment" parameterType="java.util.HashMap">
		DELETE 
		FROM PUBLIC.CAFE_COMMENT
		WHERE USER_ID = #{P_USER_ID}
	</delete>
</mapper> 